
import unittest
import sys
import json

sys.path.append('../')
from tests.util import assertFloatEqual
from bfxhfindicators import TRIX

with open('tests/btc_candle_data.json', 'r') as f:
  btcCandleData = json.load(f)
  candles = list(map(lambda candleArray: {
    'mts': candleArray[0],
    'open': candleArray[1],
    'close': candleArray[2],
    'high': candleArray[3],
    'low': candleArray[4],
    'vol': candleArray[5],
    'symbol': 'tBTCUSD',
    'tf': '1min',
  }, btcCandleData))

expected = [
  None,
  -0.0029275413737650524,
  0.05929236022605977,
  0.1852120708445426,
  0.36746566917988943,
  0.5838114340495082,
  0.8173694426849565,
  1.0570669657461451,
  1.3003511618525643,
  1.539321694075113,
  1.7657937324511153,
  1.9807917489145233,
  2.1782028379724316,
  2.353233506833252,
  2.5003846561344467,
  2.62372270696698,
  2.7181695794076255,
  2.7898273630988513,
  2.834743176669541,
  2.8634603396682223,
  2.8768767503417614,
  2.872448068025335,
  2.8521971709127847,
  2.814807021613852,
  2.7564516164813035,
  2.6816736609269753,
  2.592500658580299,
  2.5004027656150285,
  2.40613949481272,
  2.319712643190641,
  2.2259400378810135,
  2.11902730415936,
  2.0026363262237723,
  1.8823632102726862,
  1.759201460425075,
  1.642092559979158,
  1.5519218791526512,
  1.494912472268517,
  1.4631119995400788,
  1.450992029010667,
  1.4512746818362565,
  1.4587282509648247,
  1.4701025453423,
  1.4823911463213157,
  1.4973920491589965,
  1.5110067974588581,
  1.521276618010603,
  1.5286848767037675,
  1.5249392752547664,
  1.5098837915372698,
  1.48528511949797,
  1.4572304093296573,
  1.416439031771688,
  1.3724807595627553,
  1.3363421500933725,
  1.3055391989258425,
  1.2778020069115215,
  1.2697404486372577,
  1.2810501907156713,
  1.3041974080740815,
  1.3317643288757175,
  1.3600818131975778,
  1.3875527316686842,
  1.410131192161046,
  1.4234173263272254,
  1.4248964460761293,
  1.4162093272229725,
  1.3932476995592857,
  1.3497421852970426,
  1.2990759432840449,
  1.2482164305027688,
  1.184676965577669,
  1.111376944789022,
  1.0118125592484262,
  0.8958861328300927
]

class TRIXTest(unittest.TestCase):
  def test_add(self):
    indicator = TRIX([18])
    for i in range(len(expected)):
      indicator.add(candles[i]['close'])
      assertFloatEqual(self, indicator.v(), expected[i], 'candles[%d]' % i)

if __name__ == '__main__':
    unittest.main()
  
